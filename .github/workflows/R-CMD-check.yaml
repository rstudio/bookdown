# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
#
# NOTE: This workflow is overkill for most R packages and
# check-standard.yaml is likely a better choice.
# usethis::use_github_action("check-standard") will install it.
on:
  push:
    branches: [main, master]
    paths-ignore:
      - 'inst/examples/**'
      - '_pkgdown.yml'
      - 'pkgdown/**'
      - '.github/workflows/pkgdown.yaml'
      - '.github/workflows/Book.yaml'
  pull_request:
    branches: [main, master]
    paths-ignore:
      - 'inst/examples/**'
      - '_pkgdown.yml'
      - 'pkgdown/**'
      - '.github/workflows/pkgdown.yaml'
      - '.github/workflows/Book.yaml'
  workflow_dispatch:

name: R-CMD-check

concurrency:
  # Use github.run_id on main branch
  # Use github.event.pull_request.number on pull requests, so it's unique per pull request
  # Use github.ref on other branches, so it's unique per branch
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) [Pandoc ${{matrix.config.pandoc}}]

    strategy:
      fail-fast: false
      matrix:
        config:
          # testing R release with latest  pandoc version and their dev version
          - {os: windows-latest, pandoc: 'latest',  r: 'release'}
          - {os: macOS-latest,   pandoc: 'latest',  r: 'release'}
          - {os: ubuntu-latest,  pandoc: 'devel',   r: 'release'}
          # testing older pandoc versions
          - {os: ubuntu-latest,  pandoc: '3.1.11',   r: 'release'}
          - {os: ubuntu-latest,  pandoc: '2.19.2',   r: 'release'}
          - {os: ubuntu-latest,  pandoc: '2.18',     r: 'release'}
          - {os: ubuntu-latest,  pandoc: '2.17.1.1', r: 'release'}
          - {os: ubuntu-latest,  pandoc: '2.16.2',   r: 'release'}
          # testing other R versions
          - {os: ubuntu-latest,  pandoc: '3.1.11',   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  pandoc: '3.1.11',   r: 'oldrel-1'}
          - {os: ubuntu-latest,  pandoc: '3.1.11',   r: 'oldrel-2'}
          - {os: ubuntu-latest,  pandoc: '3.1.11',   r: 'oldrel-3'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    permissions:
      actions: read

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: change temp dir
        if: runner.os == 'Windows'
        run: echo "TMPDIR=${{ runner.temp }}" >> $GITHUB_ENV
        shell: bash

      - uses: r-lib/actions/setup-tinytex@v2
        env:
          # install full prebuilt version
          TINYTEX_INSTALLER: TinyTeX

      - name: Add some R options for later steps
        run: |
          cat("\noptions(tinytex.verbose = TRUE)\n", file = "~/.Rprofile", append = TRUE)
          cat(readLines("~/.Rprofile"), sep = "\n")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Remove default installed Pandoc
        if: runner.os == 'Linux'
        run: sudo dpkg -r pandoc

      - uses: r-lib/actions/setup-pandoc@v2
        if: matrix.config.pandoc != 'devel'
        with:
          pandoc-version: ${{ matrix.config.pandoc }}

      - uses: cderv/actions/setup-pandoc-nightly@nightly-pandoc
        if: matrix.config.pandoc == 'devel'

      - name: Pandoc and Tinytex info
        run: |
          rmarkdown::find_pandoc()
          tinytex::tlmgr("--version")
          tinytex::tl_pkgs()
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true

      - name: Test coverage
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release' && matrix.config.pandoc == '2.7.3'
        run: |
          pak::pkg_install('covr')
          covr::codecov()
        shell: Rscript {0}
